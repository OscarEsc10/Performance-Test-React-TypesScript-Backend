import {
  Entity,
  PrimaryGeneratedColumn,
  Column,
  CreateDateColumn,
} from 'typeorm';
import { UserRole } from '../../../common/enums/user-role.enum';

/**
 * Represents a user in the system.
 *
 * This entity is mapped to the `users` table in the database and contains
 * authentication and authorization information such as username, email, role,
 * and password hash.
 */
@Entity('users')
export class User {
  /**
   * Unique identifier for the user.
   * Automatically generated by the database.
   */
  @PrimaryGeneratedColumn()
  id: number;

  /**
   * The username used for authentication.
   * Must be unique across all users.
   */
  @Column({ unique: true })
  username: string;

  /**
   * The user's email address.
   * Must be unique across all users.
   */
  @Column({ unique: true })
  email: string;

  /**
   * The hashed password of the user.
   * Passwords are never stored in plain text.
   */
  @Column()
  password: string;

  /**
   * The role assigned to the user.
   * Defines their permissions and level of access within the system.
   * Default: `UserRole.USER`
   */
  @Column({
    name: 'role',
    type: 'enum',
    enum: UserRole,
    default: UserRole.USER,
  })
  role: UserRole;

  /**
   * Indicates whether the user is currently active.
   * Inactive users cannot log in or access protected resources.
   */
  @Column({ name: 'is_active', default: true })
  isActive: boolean;

  /**
   * The date and time when the user was created.
   * Automatically generated by the database.
   */
  @CreateDateColumn({ name: 'created_at' })
  createdAt: Date;
}
